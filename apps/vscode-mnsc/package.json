{
  "name": "vscode-mnsc",
  "type": "module",
  "version": "0.2.2",
  "displayName": "MNSC: Minimal Narrative Script Code",
  "description": "Syntax highlighting, completions, and ID tools for .mnsc files.",
  "private": true,
  "publisher": "rutan",
  "author": "rutan <ru_shalm@hazimu.com>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rutan/mnsc"
  },
  "engines": {
    "vscode": "^1.103.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "icon": "",
  "main": "./dist/extension.js",
  "activationEvents": [
    "onLanguage:mnsc",
    "onCommand:mnsc.generateIds"
  ],
  "contributes": {
    "languages": [
      {
        "id": "mnsc",
        "aliases": [
          "MNSC",
          "mnsc"
        ],
        "extensions": [
          ".mnsc"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "mnsc",
        "scopeName": "source.mnsc",
        "path": "./syntaxes/mnsc.tmLanguage.json"
      }
    ],
    "commands": [
      {
        "command": "mnsc.generateIds",
        "title": "MNSC: Generate IDs in current file"
      }
    ],
    "configuration": {
      "title": "MNSC",
      "properties": {
        "mnsc.functions": {
          "type": "array",
          "default": [],
          "description": "List of available functions and their argument keys.",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Function name (e.g., bg, playBgm)"
              },
              "args": {
                "type": "array",
                "description": "[Deprecated] Use positional/named. Named argument keys (either string or {name,type}).",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "string",
                            "number",
                            "boolean",
                            "any"
                          ],
                          "default": "any"
                        }
                      }
                    }
                  ]
                }
              },
              "positional": {
                "type": "array",
                "description": "Positional arguments in order (either string or {name,type}).",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "string",
                            "number",
                            "boolean",
                            "any"
                          ],
                          "default": "any"
                        }
                      }
                    }
                  ]
                }
              },
              "named": {
                "type": "array",
                "description": "Named arguments (either string or {name,type}). These come after positional args.",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "string",
                            "number",
                            "boolean",
                            "any"
                          ],
                          "default": "any"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "mnsc.characters": {
          "type": "array",
          "default": [],
          "description": "Speaker names and their available faces for talk text.",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "faces": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "default": []
              }
            }
          }
        },
        "mnsc.generateIds.onSave": {
          "type": "boolean",
          "default": false,
          "description": "Automatically insert message IDs on save for .mnsc files."
        },
        "mnsc.generateIds.format": {
          "type": "string",
          "enum": [
            "uuid",
            "hash"
          ],
          "default": "uuid",
          "description": "ID format used when generating message IDs."
        },
        "mnsc.diagnostics.warnUnknownFunctions": {
          "type": "boolean",
          "default": false,
          "description": "Warn when a function call name is not listed in mnsc.functions."
        },
        "mnsc.diagnostics.warnUnknownCharacters": {
          "type": "boolean",
          "default": false,
          "description": "Warn when a talk speaker name is not listed in mnsc.characters."
        },
        "mnsc.diagnostics.warnUnknownFaces": {
          "type": "boolean",
          "default": false,
          "description": "Warn when a face value is not listed for the given character in mnsc.characters[].faces."
        }
      }
    }
  },
  "scripts": {
    "build": "tsup",
    "dev": "tsup --watch",
    "lint": "biome check ./",
    "package": "pnpm run build && vsce package --no-dependencies --out dist/",
    "publish": "run-s build publish:*",
    "publish:vsce": "vsce publish --no-dependencies"
  },
  "dependencies": {
    "@rutan/mnsc": "workspace:*"
  },
  "devDependencies": {
    "@types/vscode": "^1.103.0",
    "@vscode/vsce": "^3.6.0"
  }
}
